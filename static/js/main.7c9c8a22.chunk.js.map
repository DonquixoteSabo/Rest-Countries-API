{"version":3,"sources":["components/Header.jsx","components/SearchBar.jsx","components/Country.jsx","components/CountriesList.jsx","components/Main.js","App.jsx","index.js"],"names":["Header","className","SearchBar","handleCountriesSearch","handleRegionSearch","useState","searchValue","setSearchValue","continent","setContinent","Input","value","onChange","event","target","type","placeholder","startAdornment","InputAdornment","position","Search","Button","onClick","variant","length","FormControl","InputLabel","Select","labelId","id","MenuItem","name","map","Country","x","country","useParams","nativeName","borders","capital","population","region","subregion","topLevelDomain","currencies","languages","flag","data","setData","useEffect","a","axios","get","response","fetchData","to","ArrowBack","Container","src","alt","Typography","gutterBottom","component","toString","replace","currency","index","language","border","CountriesList","countries","Grid","container","spacing","item","xs","sm","md","Card","CardMedia","title","CardContent","key","Main","error","setError","searchingCountries","setSearchingCountries","searchingRegion","setSearchingRegion","setCountries","fetchCountriesByRegion","nanoid","fetchAllCountries","fetchCountriesByName","App","path","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7c9c8a22.chunk.js","sourcesContent":["const Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"header__title\">Where in the world?</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { Input, InputAdornment, InputLabel, Select, MenuItem, FormControl, Button } from '@material-ui/core';\r\nimport { Search } from '@material-ui/icons';\r\nimport { useState } from 'react';\r\n\r\nconst SearchBar = ({ handleCountriesSearch, handleRegionSearch }) => {\r\n\r\n    //I had to do that because America in api has different searching value and I wanted to add unique id to each element\r\n    const continents = [\r\n        { name: 'Africa', value: 'Africa', id: 1 },\r\n        { name: 'America', value: 'Americas', id: 2 },\r\n        { name: 'Asia', value: 'Asia', id: 3 },\r\n        { name: 'Europe', value: 'Europe', id: 4 },\r\n        { name: 'Oceania', value: 'Oceania', id: 5 },\r\n\r\n    ]\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [continent, setContinent] = useState('');\r\n\r\n    const handleContinentChange = (event) => {\r\n        setContinent(event.target.value)\r\n        setSearchValue('');\r\n        handleRegionSearch(event.target.value)\r\n    };\r\n\r\n    const handleSearchInputChange = event => {\r\n        setContinent('')\r\n        setSearchValue(event.target.value)\r\n    };\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <div className='inner-wrapper'>\r\n                <Input\r\n                    className='search-input'\r\n                    value={searchValue}\r\n                    onChange={handleSearchInputChange}\r\n                    type='text'\r\n                    placeholder='Search for country...'\r\n                    startAdornment={\r\n                        <InputAdornment position=\"start\">\r\n                            <Search />\r\n                        </InputAdornment>\r\n                    }\r\n                />\r\n                <Button onClick={() => handleCountriesSearch(searchValue)} variant=\"outlined\">\r\n                    {!searchValue.length ? 'Search All' : 'Search'}\r\n                </Button>\r\n            </div>\r\n\r\n            <FormControl className='form'>\r\n                <InputLabel className='form__label'>Filter by Region</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-autowidth-label\"\r\n                    id=\"demo-simple-select-autowidth\"\r\n                    value={continent}\r\n                    onChange={handleContinentChange}\r\n                    className='form__select'\r\n                >\r\n                    <MenuItem className='form__menu-item' value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {continents.map(continent => (\r\n                        <MenuItem className='form__menu-item' key={continent.id} value={continent.value}>{continent.name}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Typography, Button } from '@material-ui/core';\r\nimport { ArrowBack } from '@material-ui/icons';\r\n\r\nconst Country = () => {\r\n\r\n    const numberWithSpaces = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n    }\r\n\r\n    let { country } = useParams();\r\n    const [data, setData] = useState({\r\n        nativeName: '',\r\n        borders: [],\r\n        capital: '',\r\n        population: '',\r\n        region: '',\r\n        subregion: '',\r\n        topLevelDomain: '',\r\n        currencies: [],\r\n        languages: [],\r\n        flag: '',\r\n    })\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await axios.get(`https://restcountries.eu/rest/v2/name/${country}?fullText=true`);\r\n            const { nativeName, borders, capital, population, region, subregion, topLevelDomain, currencies, languages, flag } = response.data[0];\r\n\r\n            setData({\r\n                nativeName, borders, capital, population, region, subregion, topLevelDomain, currencies, languages, flag\r\n            })\r\n        }\r\n        fetchData()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Button className='btn' variant=\"contained\">\r\n                <Link className='link' to='/'><ArrowBack />Back</Link>\r\n            </Button>\r\n            <Container className='grid-container'>\r\n                <img src={data.flag} alt='country flag' className='img' />\r\n                <Typography className='heading' gutterBottom component='h1' variant='h2'>{country}</Typography>\r\n                <div className='first-info'>\r\n                    <Typography variant='h6' component='p'>\r\n                        <span className='info-heading'>Native Name: </span>{data.nativeName}\r\n                    </Typography>\r\n\r\n                    <Typography variant='h6' component='p'>\r\n                        <span className='info-heading'>Population: </span>{numberWithSpaces(data.population)}\r\n                    </Typography>\r\n\r\n                    <Typography variant='h6' component='p'>\r\n                        <span className='info-heading'>Region: </span>{data.region}\r\n                    </Typography>\r\n\r\n                    <Typography variant='h6' component='p'>\r\n                        <span className='info-heading'>Subregion </span>{data.subregion}\r\n                    </Typography>\r\n\r\n                    <Typography variant='h6' component='p'>\r\n                        <span className='info-heading'>Capital: </span>{data.capital}\r\n                    </Typography>\r\n                </div>\r\n                <div className=\"second-info\">\r\n                    <Typography variant='h6' component='p'>\r\n                        <span className='info-heading'>Top Level Domain </span>{data.topLevelDomain}\r\n                    </Typography>\r\n\r\n                    <Typography variant='h6' component='p'>\r\n                        <span className='info-heading'>Currencies: </span>\r\n                        {\r\n                            data.currencies.map((currency, index) => (\r\n                                index !== data.currencies.length - 1 ? (\r\n                                    currency.name + ', '\r\n                                ) : currency.name\r\n                            ))\r\n                        }\r\n                    </Typography>\r\n\r\n                    <Typography variant='h6' component='p'>\r\n                        <span className='info-heading'>Languages: </span>{data.languages.map((language, index) => (\r\n                            index !== data.languages.length - 1 ? (\r\n                                language.name + ', '\r\n                            ) : language.name\r\n                        ))}\r\n                    </Typography>\r\n\r\n                </div>\r\n                <div className=\"border-info\">\r\n                    <Typography component='div' variant='h6'>\r\n                        <span className='info-heading'>Border countries: </span>\r\n                        {data.borders.length > 0 ? (\r\n                            data.borders.map(border => (\r\n                                <div className='border' key={border}>{border}</div>\r\n                            ))) : <Typography variant='h6' component='h6'>This country doesn't have any border countries</Typography>\r\n\r\n                        }\r\n\r\n                    </Typography>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Country;\r\n\r\n","import { Container, Card, CardMedia, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst CountriesList = ({ countries }) => {\r\n\r\n    return (\r\n        <Container className='cards-wrapper'>\r\n            <Grid container spacing={3}>\r\n                {countries.map(country => (\r\n                    <Grid key={country.key} item xs={12} sm={6} md={3}>\r\n                        <Link className='link' to={`/country/${country.name}`}>\r\n                            <Card className='card'>\r\n                                <CardMedia className='card__media' src={country.flag} title='country flag' component='img' />\r\n                                <CardContent className='card__content'>\r\n                                    <Typography className='card__typography card__typography-name' gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {country.name}\r\n                                    </Typography>\r\n                                    <Typography className='card__typography' gutterBottom variant=\"h6\" component=\"h3\">\r\n                                        <span className='card__typography-title'>Population:</span> {country.population}\r\n                                    </Typography>\r\n                                    <Typography className='card__typography' gutterBottom variant=\"h6\" component=\"h3\">\r\n                                        <span className='card__typography-title'>Region:</span> {country.region}\r\n                                    </Typography>\r\n                                    <Typography className='card__typography' gutterBottom variant=\"h6\" component=\"h3\">\r\n                                        <span className='card__typography-title'>Capital</span>: {country.capital}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Link>\r\n                    </Grid>\r\n\r\n                ))}\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CountriesList;","import { useState, useEffect} from 'react';\r\n\r\nimport axios from 'axios';\r\nimport {nanoid} from 'nanoid';\r\n\r\nimport CountriesList from './CountriesList';\r\nimport SearchBar from './SearchBar';\r\n\r\nconst Main = () => {\r\n    const [error, setError] = useState(false);\r\n    const [searchingCountries, setSearchingCountries] = useState('');\r\n\r\n    const [searchingRegion, setSearchingRegion] = useState('');\r\n\r\n    const [countries, setCountries] = useState([{\r\n        name: '',\r\n        population: '',\r\n        region: '',\r\n        capital: '',\r\n        flag: '',\r\n        key: '',\r\n    }]);\r\n\r\n    const fetchCountriesByRegion = async () => {\r\n        try {\r\n            const response = await axios.get(`https://restcountries.eu/rest/v2/region/${searchingRegion}`);\r\n            let countries = response.data;\r\n    \r\n            countries = countries.map(country => ({\r\n                name: country.name,\r\n                population: country.population,\r\n                region: country.region,\r\n                capital: country.capital,\r\n                flag: country.flag,\r\n                key: nanoid(8),\r\n            }))\r\n\r\n            setError(false)\r\n            setSearchingCountries('')\r\n            setCountries(countries);\r\n          \r\n        } catch {\r\n            setError(true);\r\n        }\r\n        \r\n    }\r\n\r\n    const fetchAllCountries = async () => {\r\n        try {\r\n            const response = await axios.get('https://restcountries.eu/rest/v2/all');\r\n            let countries = response.data;\r\n            \r\n            countries = countries.map(country => ({\r\n                name: country.name,\r\n                population: country.population,\r\n                region: country.region,\r\n                capital: country.capital,\r\n                flag: country.flag,\r\n                key: nanoid(8),\r\n            }))\r\n\r\n            setError(false);\r\n            setSearchingCountries('');\r\n            setSearchingRegion('');\r\n            setCountries(countries);\r\n            \r\n        } catch {\r\n            setError(true);\r\n        }\r\n    }\r\n\r\n    const fetchCountriesByName = async () => {\r\n        try {\r\n            const response = await axios.get(`https://restcountries.eu/rest/v2/name/${searchingCountries}`);\r\n            let countries = response.data\r\n    \r\n            countries = countries.map(country => ({\r\n                name: country.name,\r\n                population: country.population,\r\n                region: country.region,\r\n                capital: country.capital,\r\n                flag: country.flag,\r\n                key: nanoid(8),\r\n            }))\r\n\r\n            setError(false)\r\n            setSearchingRegion('')\r\n            setCountries(countries);\r\n           \r\n        } catch {\r\n            setError(true);\r\n        }\r\n     \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(searchingRegion) fetchCountriesByRegion();\r\n        else fetchAllCountries();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [searchingRegion]);\r\n\r\n    useEffect(()=>{\r\n        if(searchingCountries) fetchCountriesByName()\r\n        else fetchAllCountries()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [searchingCountries])\r\n\r\n    useEffect(() => fetchAllCountries(), [])\r\n\r\n    const handleCountriesSearch = (data) =>  {\r\n        setSearchingCountries(data)\r\n        setSearchingRegion('');\r\n    };\r\n\r\n    const handleRegionSearch = (data) => {\r\n        setSearchingRegion(data)\r\n        setSearchingCountries('');\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <SearchBar \r\n            handleCountriesSearch={handleCountriesSearch}\r\n            handleRegionSearch={handleRegionSearch}\r\n             />\r\n            {error ? <h1>Nie mamy tego krajuw  bazie danych</h1> :  <CountriesList countries={countries} />}\r\n        </>\r\n    ) \r\n}\r\n \r\nexport default Main;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Header, Country, Main } from './components';\r\n\r\nimport './styles/index.scss';\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Router>\r\n                <Switch>\r\n                    <Route path='/country/:country' component={Country} />\r\n                    <Route path='/' component={Main} />\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nconst root = document.getElementById('root');\r\n\r\nReactDOM.render(<App />, root);"],"sourceRoot":""}